# "podman build -t x86_64-elf-toolchain ." to build image.
# "podman run -it --rm x86_64-elf-toolchain" to run image and dive inside.
# or "podman run -it --rm x86_64-elf-toolchain COMMAND" to run a command without going inside.

FROM ubuntu:latest

RUN apt-get update && \
	apt-get install -y build-essential bison flex libgmp3-dev libmpc-dev libmpfr-dev libisl-dev texinfo wget

RUN wget "https://ftp.gnu.org/gnu/binutils/binutils-2.43.tar.xz" && \
	wget "https://ftp.gnu.org/gnu/gcc/gcc-14.2.0/gcc-14.2.0.tar.xz" && \
	wget "https://ftp.gnu.org/gnu/gdb/gdb-15.1.tar.xz"

RUN tar -xf binutils-2.43.tar.xz && tar -xf gcc-14.2.0.tar.xz && tar -xf gdb-15.1.tar.xz && \
	rm -rf binutils-2.43.tar.xz gcc-14.2.0.tar.xz gdb-15.1.tar.xz

RUN mkdir build-binutils && cd build-binutils && \
	../binutils-2.43/configure --target="x86_64-elf" --prefix="/usr/local" --with-sysroot --disable-nls --disable-werror && \
	make && make install && \
	cd ../ && rm -rf build-binutils binutils-2.43

RUN mkdir build-gcc && cd build-gcc && \
	../gcc-14.2.0/configure --target="x86_64-elf" --prefix="/usr/local" --disable-nls --enable-languages=c,c++ --without-headers && \
	make all-gcc && make all-target-libgcc && make install-gcc && make install-target-libgcc && \
	cd ../ && rm -rf build-gcc gcc-14.2.0

RUN mkdir build-gdb && cd build-gdb && \
	../gdb-15.1/configure --target="x86_64-elf" --prefix="/usr/local" --disable-werror && \
	make all-gdb && make install-gdb && \
	cd ../ && rm -rf build-gdb gdb-15.1

WORKDIR /project
COPY . /project

CMD [ "bash" ] # change this within your needs.
